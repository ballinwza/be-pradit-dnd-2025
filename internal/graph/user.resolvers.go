package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.73

import (
	"context"
	"errors"
	"net/http"

	"github.com/ballinwza/be-pradit-dnd-2025/internal/error_handler"
	"github.com/ballinwza/be-pradit-dnd-2025/internal/graph/model"
	"github.com/ballinwza/be-pradit-dnd-2025/middleware"
)

// UserAuthentication is the resolver for the userAuthentication field.
func (r *queryResolver) UserAuthentication(ctx context.Context) (*model.User, error) {
	claims, ok := ctx.Value(middleware.UserCtxKey).(*middleware.UserClaims)

	if !ok || claims == nil {
		return nil, error_handler.NewValidationError("access denied: you must be logged in", errors.New("access denied: invalid token"), http.StatusInternalServerError).GqlError(ctx)
	}

	return &model.User{
		ID:    claims.UserId,
		Name:  claims.Name,
		Email: claims.Email,
	}, nil
}
