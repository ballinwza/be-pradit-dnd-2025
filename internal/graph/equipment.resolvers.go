package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.73

import (
	"context"
	"net/http"

	"github.com/ballinwza/be-pradit-dnd-2025/internal/error_handler"
	"github.com/ballinwza/be-pradit-dnd-2025/internal/graph/model"
)

// EquipmentByCharacterID is the resolver for the equipmentByCharacterId field.
func (r *queryResolver) EquipmentByCharacterID(ctx context.Context, characterID string) (*model.Equipment, error) {
	result, err := r.EquipmentService.GetEquipmentByCharacterId(ctx, characterID)
	if err != nil {
		return nil, error_handler.NewValidationError("Failed to get EquipmentByCharacterId", err, http.StatusInternalServerError).GqlError(ctx)
	}
	return result, nil
}

// WatchEquipmentByCharacterID is the resolver for the watchEquipmentByCharacterId field.
func (r *subscriptionResolver) WatchEquipmentByCharacterID(ctx context.Context, characterID string) (<-chan *model.Equipment, error) {
	result, err := r.EquipmentService.WatchEquipmentByCharacterId(ctx, characterID)
	if err != nil {
		return nil, error_handler.NewValidationError("Failed to get EquipmentByCharacterId", err, http.StatusInternalServerError).GqlError(ctx)
	}
	return result, nil
}
